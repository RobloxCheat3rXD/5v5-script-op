local StarterGui = game:GetService("StarterGui")
StarterGui:SetCore("SendNotification", {
    Title = "By Oliver",
    Text = "Thank You For Using My Gui!",
    Icon = "rbxassetid://7733960981",
    Duration = 7
})
local plrs = game:GetService("Players")
local lp = plrs.LocalPlayer
local uis = game:GetService("UserInputService")
local runService = game:GetService("RunService")
local ts = game:GetService("TweenService")

-- Remove old GUI if exists
local old = lp:FindFirstChild("PlayerGui"):FindFirstChild("CustomMM2GUI")
if old then old:Destroy() end

-- Create GUI
local gui = Instance.new("ScreenGui", lp:WaitForChild("PlayerGui"))
gui.Name = "CustomMM2GUI"
gui.ResetOnSpawn = false

-- Main Frame
local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 500, 0, 350)
frame.Position = UDim2.new(0.5, -250, 0.5, -175)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 10)

-- Top Title Bar (with Minimize and Close)
local titleBar = Instance.new("Frame", frame)
titleBar.Size = UDim2.new(1, 0, 0, 40)
titleBar.Position = UDim2.new(0, 0, 0, 0)
titleBar.BackgroundColor3 = Color3.fromRGB(18, 18, 22)
titleBar.BorderSizePixel = 0

local titleLabel = Instance.new("TextLabel", titleBar)
titleLabel.Size = UDim2.new(1, -100, 1, 0)
titleLabel.Position = UDim2.new(0, 10, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "5v5 Recker 1.7"
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextColor3 = Color3.new(1,1,1)
titleLabel.TextSize = 18
titleLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Close Button
local closeBtn = Instance.new("TextButton", titleBar)
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1, -35, 0, 5)
closeBtn.BackgroundColor3 = Color3.fromRGB(60, 0, 0)
closeBtn.Text = "X"
closeBtn.TextColor3 = Color3.new(1, 1, 1)
closeBtn.TextSize = 14
closeBtn.Font = Enum.Font.GothamBold
closeBtn.BorderSizePixel = 0
Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(1, 0)
closeBtn.MouseButton1Click:Connect(function()
    gui:Destroy()
end)

-- Minimize Button
local minimizeBtn = Instance.new("TextButton", titleBar)
minimizeBtn.Size = UDim2.new(0, 30, 0, 30)
minimizeBtn.Position = UDim2.new(1, -70, 0, 5)
minimizeBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
minimizeBtn.Text = "-"
minimizeBtn.TextColor3 = Color3.new(1, 1, 1)
minimizeBtn.TextSize = 18
minimizeBtn.Font = Enum.Font.GothamBold
minimizeBtn.BorderSizePixel = 0
Instance.new("UICorner", minimizeBtn).CornerRadius = UDim.new(1, 0)

-- Sidebar (Tabs)
local tabBar = Instance.new("Frame", frame)
tabBar.Size = UDim2.new(0, 100, 1, -40)
tabBar.Position = UDim2.new(0, 0, 0, 40)
tabBar.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
tabBar.BorderSizePixel = 0

-- Pages Container
local pagesContainer = Instance.new("Frame", frame)
pagesContainer.Size = UDim2.new(1, -100, 1, -40)
pagesContainer.Position = UDim2.new(0, 100, 0, 40)
pagesContainer.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
pagesContainer.BorderSizePixel = 0

-- Minimize toggle logic
local minimized = false
minimizeBtn.MouseButton1Click:Connect(function()
    minimized = not minimized
    if minimized then
        tabBar.Visible = false
        pagesContainer.Visible = false
        frame.Size = UDim2.new(0, 500, 0, 40)
    else
        tabBar.Visible = true
        pagesContainer.Visible = true
        frame.Size = UDim2.new(0, 500, 0, 350)
    end
end)

local tabs = { "Main", "Murder", "Sheriff", "Extra" }
local btns, pages = {}, {}

local selCol = Color3.fromRGB(0, 170, 255)
local unselCol = Color3.fromRGB(45, 45, 50)

for i, name in ipairs(tabs) do
    local b = Instance.new("TextButton", tabBar)
    b.Size = UDim2.new(1, 0, 0, 40)
    b.Position = UDim2.new(0, 0, 0, (i - 1) * 42)
    b.Text = name
    b.Font = Enum.Font.GothamBold
    b.TextSize = 14
    b.BackgroundColor3 = unselCol
    b.TextColor3 = Color3.new(1, 1, 1)
    b.BorderSizePixel = 0
    Instance.new("UICorner", b).CornerRadius = UDim.new(0, 6)

    local page = Instance.new("Frame", pagesContainer)
    page.Size = UDim2.new(1, 0, 1, 0)
    page.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
    page.BorderSizePixel = 0
    page.Visible = (name == "Main")
    Instance.new("UICorner", page).CornerRadius = UDim.new(0, 8)

    btns[name] = b
    pages[name] = page

    b.MouseButton1Click:Connect(function()
        for tab, pg in pairs(pages) do
            pg.Visible = false
            btns[tab].BackgroundColor3 = unselCol
        end
        page.Visible = true
        b.BackgroundColor3 = selCol
    end)
end
btns["Main"].BackgroundColor3 = selCol

-- Toggle helper
local function toggle(parent, text, default, cb)
    local wrap = Instance.new("Frame", parent)
    wrap.Size = UDim2.new(1, -40, 0, 40)
    wrap.BackgroundTransparency = 1

    local lbl = Instance.new("TextLabel", wrap)
    lbl.Size = UDim2.new(0.7, 0, 1, 0)
    lbl.Position = UDim2.new(0, 10, 0, 0)
    lbl.BackgroundTransparency = 1
    lbl.Text = text
    lbl.Font = Enum.Font.Gotham
    lbl.TextColor3 = Color3.new(1, 1, 1)
    lbl.TextSize = 16
    lbl.TextXAlignment = Enum.TextXAlignment.Left

    local bg = Instance.new("Frame", wrap)
    bg.Size = UDim2.new(0, 40, 0, 20)
    bg.Position = UDim2.new(1, -50, 0.5, -10)
    bg.BackgroundColor3 = Color3.fromRGB(70, 70, 80)
    bg.BorderSizePixel = 0
    Instance.new("UICorner", bg).CornerRadius = UDim.new(1, 0)

    local dot = Instance.new("Frame", bg)
    dot.Size = UDim2.new(0, 16, 0, 16)
    dot.Position = UDim2.new(default and 1 or 0, default and -16 or 0, 0.5, -8)
    dot.BackgroundColor3 = default and selCol or Color3.fromRGB(180,180,180)
    dot.BorderSizePixel = 0
    Instance.new("UICorner", dot).CornerRadius = UDim.new(1, 0)

    local click = Instance.new("TextButton", bg)
    click.BackgroundTransparency = 1
    click.Size = UDim2.new(1, 0, 1, 0)
    click.Text = ""

    local on = default
    local function set(v)
        on = v
        dot:TweenPosition(UDim2.new(v and 1 or 0, v and -16 or 0, 0.5, -8), "InOut", "Quad", 0.2, true)
        dot.BackgroundColor3 = v and selCol or Color3.fromRGB(180,180,180)
        bg.BackgroundColor3 = v and Color3.fromRGB(40, 40, 50) or Color3.fromRGB(70, 70, 80)
        if cb then pcall(cb, v) end
    end

    click.MouseButton1Click:Connect(function()
        set(not on)
    end)

    return wrap, set
end

-- ===========================================
-- MAIN TAB FEATURES
-- ===========================================
local main = pages["Main"]
local yPos = 20

-- Speed Slider
local speedValue = 16
local speedLabel = Instance.new("TextLabel", main)
speedLabel.Size = UDim2.new(1, -40, 0, 30)
speedLabel.Position = UDim2.new(0, 20, 0, yPos)
speedLabel.BackgroundTransparency = 1
speedLabel.Text = "Speed: " .. speedValue
speedLabel.Font = Enum.Font.GothamBold
speedLabel.TextSize = 16
speedLabel.TextColor3 = Color3.new(1,1,1)
speedLabel.TextXAlignment = Enum.TextXAlignment.Left
yPos += 30

local sliderTrack = Instance.new("Frame", main)
sliderTrack.Size = UDim2.new(0, 300, 0, 10)
sliderTrack.Position = UDim2.new(0, 20, 0, yPos)
sliderTrack.BackgroundColor3 = Color3.fromRGB(70, 70, 80)
sliderTrack.BorderSizePixel = 0
Instance.new("UICorner", sliderTrack).CornerRadius = UDim.new(1, 0)
yPos += 15

local sliderThumb = Instance.new("Frame", sliderTrack)
sliderThumb.Size = UDim2.new(0, 20, 0, 20)
sliderThumb.Position = UDim2.new(0, speedValue * 3, 0, -5)
sliderThumb.BackgroundColor3 = selCol
sliderThumb.BorderSizePixel = 0
Instance.new("UICorner", sliderThumb).CornerRadius = UDim.new(1, 0)

local sliderController = Instance.new("TextButton", sliderTrack)
sliderController.Size = UDim2.new(1, 0, 3, 0)
sliderController.Position = UDim2.new(0, 0, -1, 0)
sliderController.BackgroundTransparency = 1
sliderController.Text = ""
sliderController.ZIndex = 10

local dragging = false
local function updateSlider(input)
    local mousePos
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        mousePos = input.Position
    elseif input.UserInputType == Enum.UserInputType.Touch then
        mousePos = input.Position
    else
        return
    end
    
    local trackPos = sliderTrack.AbsolutePosition
    local trackSize = sliderTrack.AbsoluteSize.X
    local relativeX = math.clamp(mousePos.X - trackPos.X, 0, trackSize)
    
    speedValue = math.floor(relativeX / trackSize * 100)
    speedLabel.Text = "Speed: " .. speedValue
    sliderThumb.Position = UDim2.new(0, relativeX - 10, 0, -5)
    
    local char = lp.Character
    if char and char:FindFirstChild("Humanoid") then
        char.Humanoid.WalkSpeed = speedValue
    end
end

sliderController.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or 
       input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        updateSlider(input)
    end
end)

sliderController.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or 
                     input.UserInputType == Enum.UserInputType.Touch) then
        updateSlider(input)
    end
end)

sliderController.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or 
       input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)

yPos += 30

-- Infinite Jump
local infJumpEnabled = false
local infJumpConnection
local infJumpToggle, setInfJump = toggle(main, "Infinite Jump", false, function(enabled)
    infJumpEnabled = enabled
    
    if infJumpConnection then
        infJumpConnection:Disconnect()
        infJumpConnection = nil
    end
    
    if enabled then
        infJumpConnection = uis.JumpRequest:Connect(function()
            if infJumpEnabled then
                local char = lp.Character
                if char and char:FindFirstChild("Humanoid") then
                    char.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                end
            end
        end)
    end
end)
infJumpToggle.Position = UDim2.new(0, 20, 0, yPos)
yPos += 40

-- Noclip Toggle
local noclipEnabled = false
local noclipToggle, setNoclip = toggle(main, "Noclip", false, function(enabled)
    noclipEnabled = enabled
end)
noclipToggle.Position = UDim2.new(0, 20, 0, yPos)
yPos += 40

-- Apply noclip
runService.Stepped:Connect(function()
    if noclipEnabled then
        local char = lp.Character
        if char then
            for _, part in ipairs(char:GetDescendants()) do
                if part:IsA("BasePart") and part.CanCollide then
                    part.CanCollide = false
                end
            end
        end
    end
end)

-- ===========================================
-- MURDER TAB WITH PLAYER SELECTION AND AVATARS
-- ===========================================
local murder = pages["Murder"]

-- Make the murder tab scrollable
local murderScrolling = Instance.new("ScrollingFrame", murder)
murderScrolling.Size = UDim2.new(1, 0, 1, 0)
murderScrolling.BackgroundTransparency = 1
murderScrolling.CanvasSize = UDim2.new(0, 0, 0, 600)
murderScrolling.ScrollBarThickness = 5
murderScrolling.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 100)

local murderContent = Instance.new("Frame", murderScrolling)
murderContent.Size = UDim2.new(1, 0, 0, 600)
murderContent.BackgroundTransparency = 1

local function updateMurderCanvas()
    murderContent.Size = UDim2.new(1, 0, 0, murderContent.UIListLayout.AbsoluteContentSize.Y + 20)
    murderScrolling.CanvasSize = UDim2.new(0, 0, 0, murderContent.UIListLayout.AbsoluteContentSize.Y + 20)
end

local murderLayout = Instance.new("UIListLayout", murderContent)
murderLayout.Padding = UDim.new(0, 10)
murderLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(updateMurderCanvas)

local y = 10

-- Player Selection Box with Avatar
local selectedPlayer = nil
local playerSelectionBox = Instance.new("Frame", murderContent)
playerSelectionBox.Size = UDim2.new(1, -40, 0, 40)
playerSelectionBox.Position = UDim2.new(0, 20, 0, y)
playerSelectionBox.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
playerSelectionBox.BorderSizePixel = 0
Instance.new("UICorner", playerSelectionBox).CornerRadius = UDim.new(0, 6)
y += 50

-- Player head display
local playerHead = Instance.new("ImageLabel", playerSelectionBox)
playerHead.Size = UDim2.new(0, 30, 0, 30)
playerHead.Position = UDim2.new(0, 5, 0.5, -15)
playerHead.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
playerHead.BorderSizePixel = 0
playerHead.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
Instance.new("UICorner", playerHead).CornerRadius = UDim.new(1, 0)

local playerSelectionText = Instance.new("TextLabel", playerSelectionBox)
playerSelectionText.Size = UDim2.new(0.8, -40, 1, 0)
playerSelectionText.Position = UDim2.new(0, 40, 0, 0)
playerSelectionText.BackgroundTransparency = 1
playerSelectionText.Text = "Select Player..."
playerSelectionText.Font = Enum.Font.Gotham
playerSelectionText.TextColor3 = Color3.new(1, 1, 1)
playerSelectionText.TextSize = 16
playerSelectionText.TextXAlignment = Enum.TextXAlignment.Left

local playerSelectionButton = Instance.new("TextButton", playerSelectionBox)
playerSelectionButton.Size = UDim2.new(1, 0, 1, 0)
playerSelectionButton.Position = UDim2.new(0, 0, 0, 0)
playerSelectionButton.BackgroundTransparency = 1
playerSelectionButton.Text = ""
playerSelectionButton.ZIndex = 2

-- Player Selection Dropdown with Avatars
local playerDropdown = Instance.new("Frame", murderContent)
playerDropdown.Size = UDim2.new(1, -40, 0, 0)
playerDropdown.Position = UDim2.new(0, 20, 0, y)
playerDropdown.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
playerDropdown.BorderSizePixel = 0
playerDropdown.Visible = false
playerDropdown.ClipsDescendants = true
Instance.new("UICorner", playerDropdown).CornerRadius = UDim.new(0, 6)

local playerDropdownLayout = Instance.new("UIListLayout", playerDropdown)
playerDropdownLayout.Padding = UDim.new(0, 2)

local function getPlayerHeadshot(userId)
    local success, result = pcall(function()
        return game:GetService("Players"):GetUserThumbnailAsync(userId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size100x100)
    end)
    return success and result or "rbxasset://textures/ui/GuiImagePlaceholder.png"
end

local function updatePlayerDropdown()
    for _, child in ipairs(playerDropdown:GetChildren()) do
        if child:IsA("Frame") then
            child:Destroy()
        end
    end
    
    for _, player in ipairs(plrs:GetPlayers()) do
        if player ~= lp then
            local btnFrame = Instance.new("Frame", playerDropdown)
            btnFrame.Size = UDim2.new(1, 0, 0, 40)
            btnFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
            btnFrame.BorderSizePixel = 0
            
            local btn = Instance.new("TextButton", btnFrame)
            btn.Size = UDim2.new(1, 0, 1, 0)
            btn.BackgroundTransparency = 1
            btn.Text = ""
            btn.ZIndex = 2
            
            local headshot = Instance.new("ImageLabel", btnFrame)
            headshot.Size = UDim2.new(0, 30, 0, 30)
            headshot.Position = UDim2.new(0, 5, 0.5, -15)
            headshot.BackgroundColor3 = Color3.fromRGB(70, 70, 80)
            headshot.BorderSizePixel = 0
            headshot.Image = getPlayerHeadshot(player.UserId)
            Instance.new("UICorner", headshot).CornerRadius = UDim.new(1, 0)
            
            local nameLabel = Instance.new("TextLabel", btnFrame)
            nameLabel.Size = UDim2.new(1, -40, 1, 0)
            nameLabel.Position = UDim2.new(0, 40, 0, 0)
            nameLabel.BackgroundTransparency = 1
            nameLabel.Text = player.Name
            nameLabel.Font = Enum.Font.Gotham
            nameLabel.TextColor3 = Color3.new(1, 1, 1)
            nameLabel.TextSize = 14
            nameLabel.TextXAlignment = Enum.TextXAlignment.Left
            
            btn.MouseButton1Click:Connect(function()
                selectedPlayer = player
                playerSelectionText.Text = player.Name
                playerHead.Image = getPlayerHeadshot(player.UserId)
                playerDropdown.Visible = false
            end)
        end
    end
    
    playerDropdown.Size = UDim2.new(1, -40, 0, playerDropdownLayout.AbsoluteContentSize.Y)
end

playerSelectionButton.MouseButton1Click:Connect(function()
    updatePlayerDropdown()
    playerDropdown.Visible = not playerDropdown.Visible
end)

plrs.PlayerAdded:Connect(function(player)
    task.wait(1)
    updatePlayerDropdown()
end)

plrs.PlayerRemoving:Connect(function(player)
    if selectedPlayer == player then
        selectedPlayer = nil
        playerSelectionText.Text = "Select Player..."
        playerHead.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
    end
    updatePlayerDropdown()
end)

-- Function to equip knife
local function equipKnife()
    local ch = lp.Character or lp.CharacterAdded:Wait()
    local tool = ch:FindFirstChildOfClass("Tool") or lp.Backpack:FindFirstChildOfClass("Tool")
    if tool and tool.Parent == lp.Backpack then
        tool.Parent = ch
    end
    return tool
end

-- Function to kill a specific player
local function killPlayer(player)
    if not player or not player.Character then return end
    
    local char = lp.Character or lp.CharacterAdded:Wait()
    local knife = equipKnife()
    if knife then
        local t = player.Character:FindFirstChild("HumanoidRootPart")
        local m = char:FindFirstChild("HumanoidRootPart")
        if t and m then
            knife:Activate()
            firetouchinterest(t, knife.Handle, 0)
            firetouchinterest(t, knife.Handle, 1)
            task.wait(0.3)
        end
    end
end

-- Loop kill selected player toggle
getgenv().loopKillSelected = false
local loopKillSelectedToggle, setLoopKillSelected = toggle(murderContent, "Loop Kill Selected", false, function(enabled)
    getgenv().loopKillSelected = enabled
    if enabled and selectedPlayer then
        while getgenv().loopKillSelected and selectedPlayer do
            killPlayer(selectedPlayer)
            task.wait(0.5)
        end
    end
end)
loopKillSelectedToggle.Position = UDim2.new(0, 20, 0, y)
y += 50

-- Kill Selected Player Button
local killSelectedBtn = Instance.new("TextButton", murderContent)
killSelectedBtn.Size = UDim2.new(1, -40, 0, 36)
killSelectedBtn.Position = UDim2.new(0, 20, 0, y)
killSelectedBtn.BackgroundColor3 = Color3.fromRGB(55, 55, 60)
killSelectedBtn.TextColor3 = Color3.new(1, 1, 1)
killSelectedBtn.Font = Enum.Font.Gotham
killSelectedBtn.TextSize = 15
killSelectedBtn.Text = "Kill Selected Player"
killSelectedBtn.BorderSizePixel = 0
Instance.new("UICorner", killSelectedBtn).CornerRadius = UDim.new(0, 6)
killSelectedBtn.MouseButton1Click:Connect(function()
    if selectedPlayer then
        killPlayer(selectedPlayer)
    end
end)
y += 50

-- Loop Kill All Toggle
getgenv().killall = false
local loopKillAllToggle, setLoopKillAll = toggle(murderContent, "Loop Kill All", false, function(enabled)
    getgenv().killall = enabled
    if enabled then
        task.spawn(function()
            while getgenv().killall do
                pcall(function()
                    local char = lp.Character or lp.CharacterAdded:Wait()
                    local knife = equipKnife()
                    if knife then
                        for _, p in ipairs(plrs:GetPlayers()) do
                            if p ~= lp and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
                                local t = p.Character.HumanoidRootPart
                                local m = char:FindFirstChild("HumanoidRootPart")
                                if t and m then
                                    knife:Activate()
                                    firetouchinterest(t, knife.Handle, 0)
                                    firetouchinterest(t, knife.Handle, 1)
                                    task.wait(0.3)
                                end
                            end
                        end
                    end
                end)
                task.wait(0.1)
            end
        
end)
    end
end)
loopKillAllToggle.Position = UDim2.new(0, 20, 0, y)
y += 50

-- Auto Equip Knife Button
local equipKnifeBtn = Instance.new("TextButton", murderContent)
equipKnifeBtn.Size = UDim2.new(1, -40, 0, 36)
equipKnifeBtn.Position = UDim2.new(0, 20, 0, y)
equipKnifeBtn.BackgroundColor3 = Color3.fromRGB(55, 55, 60)
equipKnifeBtn.TextColor3 = Color3.new(1, 1, 1)
equipKnifeBtn.Font = Enum.Font.Gotham
equipKnifeBtn.TextSize = 15
equipKnifeBtn.Text = "Auto Equip Knife"
equipKnifeBtn.BorderSizePixel = 0
Instance.new("UICorner", equipKnifeBtn).CornerRadius = UDim.new(0, 6)
equipKnifeBtn.MouseButton1Click:Connect(function()
    equipKnife()
end)
y += 50

-- Kill All Once Button
local killAllBtn = Instance.new("TextButton", murderContent)
killAllBtn.Size = UDim2.new(1, -40, 0, 36)
killAllBtn.Position = UDim2.new(0, 20, 0, y)
killAllBtn.BackgroundColor3 = Color3.fromRGB(55, 55, 60)
killAllBtn.TextColor3 = Color3.new(1, 1, 1)
killAllBtn.Font = Enum.Font.Gotham
killAllBtn.TextSize = 15
killAllBtn.Text = "Kill All Once"
killAllBtn.BorderSizePixel = 0
Instance.new("UICorner", killAllBtn).CornerRadius = UDim.new(0, 6)
killAllBtn.MouseButton1Click:Connect(function()
    local char = lp.Character or lp.CharacterAdded:Wait()
    local knife = equipKnife()
    if knife then
        for _, p in ipairs(plrs:GetPlayers()) do
            if p ~= lp and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
                local t = p.Character.HumanoidRootPart
                local m = char:FindFirstChild("HumanoidRootPart")
                if t and m then
                    knife:Activate()
                    firetouchinterest(t, knife.Handle, 0)
                    firetouchinterest(t, knife.Handle, 1)
                    task.wait(0.3)
                end
            end
        end
    end
end)
y += 50

-- Kill Sheriffs Button
local killSheriffsBtn = Instance.new("TextButton", murderContent)
killSheriffsBtn.Size = UDim2.new(1, -40, 0, 36)
killSheriffsBtn.Position = UDim2.new(0, 20, 0, y)
killSheriffsBtn.BackgroundColor3 = Color3.fromRGB(55, 55, 60)
killSheriffsBtn.TextColor3 = Color3.new(1, 1, 1)
killSheriffsBtn.Font = Enum.Font.Gotham
killSheriffsBtn.TextSize = 15
killSheriffsBtn.Text = "Kill Sheriffs"
killSheriffsBtn.BorderSizePixel = 0
Instance.new("UICorner", killSheriffsBtn).CornerRadius = UDim.new(0, 6)
killSheriffsBtn.MouseButton1Click:Connect(function()
    local char = lp.Character or lp.CharacterAdded:Wait()
    local knife = equipKnife()
    if knife then
        for _, p in ipairs(plrs:GetPlayers()) do
            if p ~= lp and p.Character and (p.Character:FindFirstChild("Gun") or p.Backpack:FindFirstChild("Gun")) then
                local t = p.Character:FindFirstChild("HumanoidRootPart")
                local m = char:FindFirstChild("HumanoidRootPart")
                if t and m then
                    knife:Activate()
                    firetouchinterest(t, knife.Handle, 0)
                    firetouchinterest(t, knife.Handle, 1)
                    task.wait(0.3)
                end
            end
        end
    end
end)
y += 50

-- ===========================================
-- SHERIFF TAB WITH ENEMY HITBOX
-- ===========================================
local sheriff = pages["Sheriff"]

-- Enemy Hitbox Toggle
local hitboxToggle, setHitbox = toggle(sheriff, "Enemy Hitbox", false, function(enabled)
    local function applyHitboxToCharacter(char, isEnemy)
        if not char then return end
        local hrp = char:FindFirstChild("HumanoidRootPart")
        if hrp then
            if enabled and isEnemy then
                if not hrp:FindFirstChild("OriginalSize") then
                    local origSize = Instance.new("Vector3Value")
                    origSize.Name = "OriginalSize"
                    origSize.Value = hrp.Size
                    origSize.Parent = hrp
                end
                if not hrp:FindFirstChild("OriginalColor") then
                    local origColor = Instance.new("Color3Value")
                    origColor.Name = "OriginalColor"
                    origColor.Value = hrp.Color
                    origColor.Parent = hrp
                end

                hrp.Size = Vector3.new(20, 20, 20)
                hrp.Color = Color3.fromRGB(0, 100, 255)
                hrp.CanCollide = false
            else
                local origSizeVal = hrp:FindFirstChild("OriginalSize")
                local origColorVal = hrp:FindFirstChild("OriginalColor")
                if origSizeVal then
                    hrp.Size = origSizeVal.Value
                    origSizeVal:Destroy()
                end
                if origColorVal then
                    hrp.Color = origColorVal.Value
                    origColorVal:Destroy()
                end
                hrp.CanCollide = true
            end
        end
    end
for _, player in ipairs(plrs:GetPlayers()) do
        local isEnemy = player ~= lp
        local char = player.Character
        if char then
            applyHitboxToCharacter(char, isEnemy)
        end

        if not player:GetAttribute("HitboxListenerAdded") then
            player.CharacterAdded:Connect(function(c)
                task.wait(0.5)
                applyHitboxToCharacter(c, player ~= lp)
            end)
            player:SetAttribute("HitboxListenerAdded", true)
        end
    end
end)
hitboxToggle.Position = UDim2.new(0, 20, 0, 20)

-- ===========================================
-- EXTRA TAB WITH FLING FUNCTIONALITY
-- ===========================================
local extra = pages["Extra"]

-- Make the extra tab scrollable
local extraScrolling = Instance.new("ScrollingFrame", extra)
extraScrolling.Size = UDim2.new(1, 0, 1, 0)
extraScrolling.BackgroundTransparency = 1
extraScrolling.CanvasSize = UDim2.new(0, 0, 0, 400)
extraScrolling.ScrollBarThickness = 5
extraScrolling.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 100)

local extraContent = Instance.new("Frame", extraScrolling)
extraContent.Size = UDim2.new(1, 0, 0, 400)
extraContent.BackgroundTransparency = 1

local function updateExtraCanvas()
    extraContent.Size = UDim2.new(1, 0, 0, extraContent.UIListLayout.AbsoluteContentSize.Y + 20)
    extraScrolling.CanvasSize = UDim2.new(0, 0, 0, extraContent.UIListLayout.AbsoluteContentSize.Y + 20)
end

local extraLayout = Instance.new("UIListLayout", extraContent)
extraLayout.Padding = UDim.new(0, 10)
extraLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(updateExtraCanvas)

local y = 10

-- Player Selection Box with Avatar (for fling)
local flingSelectedPlayer = nil
local flingSelectionBox = Instance.new("Frame", extraContent)
flingSelectionBox.Size = UDim2.new(1, -40, 0, 40)
flingSelectionBox.Position = UDim2.new(0, 20, 0, y)
flingSelectionBox.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
flingSelectionBox.BorderSizePixel = 0
Instance.new("UICorner", flingSelectionBox).CornerRadius = UDim.new(0, 6)
y += 50

-- Player head display
local flingPlayerHead = Instance.new("ImageLabel", flingSelectionBox)
flingPlayerHead.Size = UDim2.new(0, 30, 0, 30)
flingPlayerHead.Position = UDim2.new(0, 5, 0.5, -15)
flingPlayerHead.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
flingPlayerHead.BorderSizePixel = 0
flingPlayerHead.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
Instance.new("UICorner", flingPlayerHead).CornerRadius = UDim.new(1, 0)

local flingSelectionText = Instance.new("TextLabel", flingSelectionBox)
flingSelectionText.Size = UDim2.new(0.8, -40, 1, 0)
flingSelectionText.Position = UDim2.new(0, 40, 0, 0)
flingSelectionText.BackgroundTransparency = 1
flingSelectionText.Text = "Select Player to Fling..."
flingSelectionText.Font = Enum.Font.Gotham
flingSelectionText.TextColor3 = Color3.new(1, 1, 1)
flingSelectionText.TextSize = 16
flingSelectionText.TextXAlignment = Enum.TextXAlignment.Left

local flingSelectionButton = Instance.new("TextButton", flingSelectionBox)
flingSelectionButton.Size = UDim2.new(1, 0, 1, 0)
flingSelectionButton.Position = UDim2.new(0, 0, 0, 0)
flingSelectionButton.BackgroundTransparency = 1
flingSelectionButton.Text = ""
flingSelectionButton.ZIndex = 2

-- Player Selection Dropdown with Avatars
local flingPlayerDropdown = Instance.new("Frame", extraContent)
flingPlayerDropdown.Size = UDim2.new(1, -40, 0, 0)
flingPlayerDropdown.Position = UDim2.new(0, 20, 0, y)
flingPlayerDropdown.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
flingPlayerDropdown.BorderSizePixel = 0
flingPlayerDropdown.Visible = false
flingPlayerDropdown.ClipsDescendants = true
Instance.new("UICorner", flingPlayerDropdown).CornerRadius = UDim.new(0, 6)

local flingPlayerDropdownLayout = Instance.new("UIListLayout", flingPlayerDropdown)
flingPlayerDropdownLayout.Padding = UDim.new(0, 2)

local function updateFlingPlayerDropdown()
    for _, child in ipairs(flingPlayerDropdown:GetChildren()) do
        if child:IsA("Frame") then
            child:Destroy()
        end
    end
    for _, player in ipairs(plrs:GetPlayers()) do
        if player ~= lp then
            local btnFrame = Instance.new("Frame", flingPlayerDropdown)
            btnFrame.Size = UDim2.new(1, 0, 0, 40)
            btnFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
            btnFrame.BorderSizePixel = 0
            
            local btn = Instance.new("TextButton", btnFrame)
            btn.Size = UDim2.new(1, 0, 1, 0)
            btn.BackgroundTransparency = 1
            btn.Text = ""
            btn.ZIndex = 2
            
            local headshot = Instance.new("ImageLabel", btnFrame)
            headshot.Size = UDim2.new(0, 30, 0, 30)
            headshot.Position = UDim2.new(0, 5, 0.5, -15)
            headshot.BackgroundColor3 = Color3.fromRGB(70, 70, 80)
            headshot.BorderSizePixel = 0
            headshot.Image = getPlayerHeadshot(player.UserId)
            Instance.new("UICorner", headshot).CornerRadius = UDim.new(1, 0)
            
            local nameLabel = Instance.new("TextLabel", btnFrame)
            nameLabel.Size = UDim2.new(1, -40, 1, 0)
            nameLabel.Position = UDim2.new(0, 40, 0, 0)
            nameLabel.BackgroundTransparency = 1
            nameLabel.Text = player.Name
            nameLabel.Font = Enum.Font.Gotham
            nameLabel.TextColor3 = Color3.new(1, 1, 1)
            nameLabel.TextSize = 14
            nameLabel.TextXAlignment = Enum.TextXAlignment.Left
            
            btn.MouseButton1Click:Connect(function()
                flingSelectedPlayer = player
                flingSelectionText.Text = player.Name
                flingPlayerHead.Image = getPlayerHeadshot(player.UserId)
                flingPlayerDropdown.Visible = false
            end)
        end
    end
    
    flingPlayerDropdown.Size = UDim2.new(1, -40, 0, flingPlayerDropdownLayout.AbsoluteContentSize.Y)
end

flingSelectionButton.MouseButton1Click:Connect(function()
    updateFlingPlayerDropdown()
    flingPlayerDropdown.Visible = not flingPlayerDropdown.Visible
end)

plrs.PlayerAdded:Connect(function(player)
    task.wait(1)
    updateFlingPlayerDropdown()
end)

plrs.PlayerRemoving:Connect(function(player)
    if flingSelectedPlayer == player then
        flingSelectedPlayer = nil
        flingSelectionText.Text = "Select Player to Fling..."
        flingPlayerHead.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
    end
    updateFlingPlayerDropdown()
end)

-- Fling function
local function SkidFling(TargetPlayer)
    local Character = lp.Character
    local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
    local RootPart = Humanoid and Humanoid.RootPart

    local TCharacter = TargetPlayer.Character
    local THumanoid = TCharacter and TCharacter:FindFirstChildOfClass("Humanoid")
    local TRootPart = THumanoid and THumanoid.RootPart
    local THead = TCharacter:FindFirstChild("Head")
    local Accessory = TCharacter:FindFirstChildOfClass("Accessory")
    local Handle = Accessory and Accessory:FindFirstChild("Handle")

    if Character and Humanoid and RootPart then
        if RootPart.Velocity.Magnitude < 50 then
            getgenv().OldPos = RootPart.CFrame
        end
        if THumanoid and THumanoid.Sit then return end
        if THead then
            workspace.CurrentCamera.CameraSubject = THead
        elseif Handle then
            workspace.CurrentCamera.CameraSubject = Handle
        elseif THumanoid and TRootPart then
            workspace.CurrentCamera.CameraSubject = THumanoid
        end
        if not TCharacter:FindFirstChildWhichIsA("BasePart") then return end

        local FPos = function(BasePart, Pos, Ang)
            RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
            Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position) * Pos * Ang)
            RootPart.Velocity = Vector3.new(9e7, 9e7 * 10, 9e7)
            RootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
        end

        local SFBasePart = function(BasePart)
            local TimeToWait = 2
            local Time = tick()
            local Angle = 0

            repeat
                if RootPart and THumanoid then
                    if BasePart.Velocity.Magnitude < 50 then
                        Angle += 100
                        FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection, CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection, CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()
                    else
                        FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(-90), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                        task.wait()
                    end
                else
                    break
                end
            until BasePart.Velocity.Magnitude > 500 or BasePart.Parent ~= TargetPlayer.Character or TargetPlayer.Parent ~= plrs or not TargetPlayer.Character == TCharacter or THumanoid.Sit or Humanoid.Health <= 0 or tick() > Time + TimeToWait
          end

        workspace.FallenPartsDestroyHeight = 0/0

        local BV = Instance.new("BodyVelocity")
        BV.Name = "EpixVel"
        BV.Parent = RootPart
        BV.Velocity = Vector3.new(9e8, 9e8, 9e8)
        BV.MaxForce = Vector3.new(1/0, 1/0, 1/0)

        Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)

        if TRootPart and THead then
            if (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
                SFBasePart(THead)
            else
                SFBasePart(TRootPart)
            end
        elseif TRootPart then
            SFBasePart(TRootPart)
        elseif THead then
            SFBasePart(THead)
        elseif Handle then
            SFBasePart(Handle)
        end

        BV:Destroy()
        Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
        workspace.CurrentCamera.CameraSubject = Humanoid

        repeat
            RootPart.CFrame = getgenv().OldPos * CFrame.new(0, .5, 0)
            Character:SetPrimaryPartCFrame(getgenv().OldPos * CFrame.new(0, .5, 0))
            Humanoid:ChangeState("GettingUp")
            for _, x in pairs(Character:GetChildren()) do
                if x:IsA("BasePart") then
                    x.Velocity = Vector3.new()
                    x.RotVelocity = Vector3.new()
                end
            end
            task.wait()
        until (RootPart.Position - getgenv().OldPos.p).Magnitude < 25
        workspace.FallenPartsDestroyHeight = getgenv().FPDH
    end
end
-- Loop Fling All Toggle
getgenv().loopFlingAll = false
local loopFlingAllToggle, setLoopFlingAll = toggle(extraContent, "Loop Fling All", false, function(enabled)
    getgenv().loopFlingAll = enabled
    if enabled then
        task.spawn(function()
            while getgenv().loopFlingAll do
                pcall(function()
                    for _, player in ipairs(plrs:GetPlayers()) do
                        if player ~= lp then
                            SkidFling(player)
                            task.wait(0.1)
                        end
                    end
                end)
                task.wait(0.1)
            end
        end)
    end
end)
loopFlingAllToggle.Position = UDim2.new(0, 20, 0, y)
y += 50

-- Loop Fling Selected Toggle
getgenv().loopFlingSelected = false
local loopFlingSelectedToggle, setLoopFlingSelected = toggle(extraContent, "Loop Fling Selected", false, function(enabled)
    getgenv().loopFlingSelected = enabled
    if enabled and flingSelectedPlayer then
        task.spawn(function()
            while getgenv().loopFlingSelected and flingSelectedPlayer do
                SkidFling(flingSelectedPlayer)
                task.wait(0.1)
            end
        end)
    end
end)
loopFlingSelectedToggle.Position = UDim2.new(0, 20, 0, y)
y += 50

-- Fling Selected Player Button
local flingSelectedBtn = Instance.new("TextButton", extraContent)
flingSelectedBtn.Size = UDim2.new(1, -40, 0, 36)
flingSelectedBtn.Position = UDim2.new(0, 20, 0, y)
flingSelectedBtn.BackgroundColor3 = Color3.fromRGB(55, 55, 60)
flingSelectedBtn.TextColor3 = Color3.new(1, 1, 1)
flingSelectedBtn.Font = Enum.Font.Gotham
flingSelectedBtn.TextSize = 15
flingSelectedBtn.Text = "Fling Selected Player"
flingSelectedBtn.BorderSizePixel = 0
Instance.new("UICorner", flingSelectedBtn).CornerRadius = UDim.new(0, 6)
flingSelectedBtn.MouseButton1Click:Connect(function()
    if flingSelectedPlayer then
        SkidFling(flingSelectedPlayer)
    end
end)
y += 50

-- Fling All Button
local flingAllBtn = Instance.new("TextButton", extraContent)
flingAllBtn.Size = UDim2.new(1, -40, 0, 36)
flingAllBtn.Position = UDim2.new(0, 20, 0, y)
flingAllBtn.BackgroundColor3 = Color3.fromRGB(55, 55, 60)
flingAllBtn.TextColor3 = Color3.new(1, 1, 1)
flingAllBtn.Font = Enum.Font.Gotham
flingAllBtn.TextSize = 15
flingAllBtn.Text = "Fling All Players"
flingAllBtn.BorderSizePixel = 0
Instance.new("UICorner", flingAllBtn).CornerRadius = UDim.new(0, 6)
flingAllBtn.MouseButton1Click:Connect(function()
    for _, player in ipairs(plrs:GetPlayers()) do
        if player ~= lp then
            SkidFling(player)
            task.wait(0.1)
        end
    end
end)
y += 50

-- Initial player dropdown updates
updatePlayerDropdown()
updateFlingPlayerDropdown()